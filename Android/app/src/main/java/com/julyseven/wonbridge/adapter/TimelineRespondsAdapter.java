package com.julyseven.wonbridge.adapter;import android.content.Context;import android.content.Intent;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.TextView;import com.bumptech.glide.Glide;import com.julyseven.wonbridge.R;import com.julyseven.wonbridge.commons.Commons;import com.julyseven.wonbridge.commons.Constants;import com.julyseven.wonbridge.model.FriendEntity;import com.julyseven.wonbridge.model.RespondEntity;import com.julyseven.wonbridge.timeline.UserProfileActivity;import java.util.ArrayList;/** * Created by GoldRain on 8/22/2016. */public class TimelineRespondsAdapter extends BaseAdapter{    private Context _context;    private ArrayList<RespondEntity> _responds = new ArrayList<>();    public TimelineRespondsAdapter(Context context){        super();        this._context = context;    }    @Override    public int getCount() {        return _responds.size();    }    public Object getItem(int position){return _responds.get(position);}    public long getItemId(int position){return position;}    public View getView (int position, View convertView, ViewGroup parent){        RespondHolder respondHolder;        if(convertView == null){            respondHolder = new RespondHolder();            LayoutInflater inflater = (LayoutInflater)_context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);            convertView = inflater.inflate(R.layout.item_timeline_respond, null);            respondHolder.imvPhoto = (ImageView)convertView.findViewById(R.id.imv_userprofile);            respondHolder.txvRespond = (TextView)convertView.findViewById(R.id.txv_respond);            convertView.setTag(respondHolder);        }else {            respondHolder = (RespondHolder)convertView.getTag();        }        final RespondEntity respond = _responds.get(position);        Glide.with(_context).load(respond.get_userProfile()).placeholder(R.drawable.img_user).error(R.drawable.img_user).into(respondHolder.imvPhoto);        respondHolder.txvRespond.setText(respond.get_content());        convertView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                gotoUserProfile(respond);            }        });        return convertView;    }    public void setDatas(ArrayList<RespondEntity> data) {        _responds = data;        notifyDataSetChanged();    }    public void gotoUserProfile(RespondEntity respond) {        if (respond.get_userId() == Commons.g_user.get_idx()) {        } else {            Intent intent = new Intent(_context, UserProfileActivity.class);            FriendEntity friendEntity = new FriendEntity();            friendEntity.set_idx(respond.get_userId());            friendEntity.set_name(respond.get_userName());            friendEntity.set_photoUrl(respond.get_userProfile());            intent.putExtra(Constants.KEY_FRIEND, friendEntity);            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);            _context.startActivity(intent);        }    }    public class RespondHolder {        public TextView txvRespond;        public ImageView imvPhoto;    }}